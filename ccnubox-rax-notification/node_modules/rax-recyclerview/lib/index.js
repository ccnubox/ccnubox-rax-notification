'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _rax = require('rax');

var _universalEnv = require('universal-env');

var _raxView = require('rax-view');

var _raxView2 = _interopRequireDefault(_raxView);

var _raxScrollview = require('rax-scrollview');

var _raxScrollview2 = _interopRequireDefault(_raxScrollview);

var _raxRefreshcontrol = require('rax-refreshcontrol');

var _raxRefreshcontrol2 = _interopRequireDefault(_raxRefreshcontrol);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DEFAULT_END_REACHED_THRESHOLD = 500;

var Cell = function (_PureComponent) {
  _inherits(Cell, _PureComponent);

  function Cell() {
    _classCallCheck(this, Cell);

    return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).apply(this, arguments));
  }

  _createClass(Cell, [{
    key: 'render',
    value: function render() {
      if (_universalEnv.isWeex && this.context.isInARecyclerView) {
        return (0, _rax.createElement)('cell', _extends({}, this.props, { append: 'tree' }));
      } else {
        return (0, _rax.createElement)(_raxView2.default, this.props);
      }
    }
  }]);

  return Cell;
}(_rax.PureComponent);

Cell.contextTypes = {
  isInARecyclerView: _rax.PropTypes.bool
};

var Header = function (_PureComponent2) {
  _inherits(Header, _PureComponent2);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
  }

  _createClass(Header, [{
    key: 'render',
    value: function render() {
      if (_universalEnv.isWeex && this.context.isInARecyclerView) {
        return (0, _rax.createElement)('header', _extends({}, this.props, { append: 'tree' }));
      } else {
        return (0, _rax.createElement)(_raxView2.default, this.props);
      }
    }
  }]);

  return Header;
}(_rax.PureComponent);

Header.contextTypes = {
  isInARecyclerView: _rax.PropTypes.bool
};

var RecyclerView = function (_Component) {
  _inherits(RecyclerView, _Component);

  function RecyclerView(props) {
    _classCallCheck(this, RecyclerView);

    var _this3 = _possibleConstructorReturn(this, (RecyclerView.__proto__ || Object.getPrototypeOf(RecyclerView)).call(this, props));

    _this3.loadmoreretry = 1;

    _this3.handleScroll = function (e) {
      e.nativeEvent = {
        contentOffset: {
          // HACK: weex scroll event value is opposite of web
          x: -e.contentOffset.x,
          y: -e.contentOffset.y
        }
      };
      _this3.props.onScroll(e);
    };

    _this3.resetScroll = function () {
      if (_universalEnv.isWeex) {
        _this3.setState({
          loadmoreretry: _this3.loadmoreretry++ // for weex 0.9-
        });
        _this3.refs.list.resetLoadmore && _this3.refs.list.resetLoadmore(); // for weex 0.9+
      } else {
        _this3.refs.scrollview.resetScroll();
      }
    };

    _this3.scrollTo = function (options) {
      var x = parseInt(options.x);
      var y = parseInt(options.y);

      if (_universalEnv.isWeex) {
        var dom = __weex_require__('@weex-module/dom');
        var firstNode = (0, _rax.findDOMNode)(_this3.refs.firstNodePlaceholder);
        dom.scrollToElement(firstNode.ref, {
          offset: x || y || 0,
          animated: options && typeof options.animated !== 'undefined' ? options.animated : true
        });
      } else {
        _this3.refs.scrollview.scrollTo(options);
      }
    };

    _this3.state = {
      loadmoreretry: 0
    };
    return _this3;
  }

  _createClass(RecyclerView, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        isInARecyclerView: true
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      if (_universalEnv.isWeex) {
        var children = props.children;
        if (!Array.isArray(children)) {
          children = [children];
        }

        var cells = children.map(function (child, index) {
          if (child) {
            var hasOnRefresh = child.props && typeof child.props.onRefresh == 'function';
            if (props._autoWrapCell && child.type != _raxRefreshcontrol2.default && child.type != Header && !hasOnRefresh) {
              return (0, _rax.createElement)(
                Cell,
                null,
                child
              );
            } else {
              return child;
            }
          } else {
            return (0, _rax.createElement)(Cell, null);
          }
        });

        // add firstNodePlaceholder after refreshcontrol
        var addIndex = cells[0].type == Cell || cells[0].type == Header ? 0 : 1;
        cells && cells.length && cells.splice(addIndex, 0, (0, _rax.createElement)(Cell, { ref: 'firstNodePlaceholder' }));

        return (0, _rax.createElement)(
          'list',
          _extends({}, props, {
            ref: 'list',
            onLoadmore: props.onEndReached,
            onScroll: props.onScroll ? this.handleScroll : null,
            loadmoreretry: this.state.loadmoreretry,
            loadmoreoffset: props.onEndReachedThreshold
          }),
          cells
        );
      } else {
        return (0, _rax.createElement)(_raxScrollview2.default, _extends({}, props, { ref: 'scrollview' }));
      }
    }
  }]);

  return RecyclerView;
}(_rax.Component);

RecyclerView.defaultProps = {
  onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD
};
RecyclerView.childContextTypes = {
  isInARecyclerView: _rax.PropTypes.bool
};


RecyclerView.Header = Header;
RecyclerView.Cell = Cell;

exports.default = RecyclerView;
module.exports = exports['default'];